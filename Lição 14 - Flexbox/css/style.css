@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@300&display=swap');

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: "Roboto", sans-serif;
    min-height: 100vh;
    padding: 20px;
}

.container {
    max-width: 800px;
    min-height: 400px;
    margin-inline: auto;
    border: 1px solid black;

    /*Flexibiliza o container, posicionando os itens dentro de uma maneira flexiva e responsiva*/
    display: flex;

    /*Alinha os itens do container no final (pra direita ou pra baixo)*/
    /* justify-content: flex-end; */

    /*Alinha os itens do container no centro do eixo principalç*/
    /* justify-content: center; */

    /*Cria um espaço nos blocos do container*/
    gap: 1rem;

    /*Cria o espaço como o gap, porém usa o eixo principal como base, dependendo do */
    /* justify-content: space-around; */

    /*Cria o espaço com gap, porém os elementos da borda do container ficam colados no limite do container.*/
    /* justify-content: space-between; */

    /*Cria o gap perfeitamente igual entre os elementos do container.*/
    justify-content: center;

    /*Parecido com justify content, mas foca no eixo transversal*/
    align-items: center;

    /*Faz com que os blocos do container fiquem em formato de coluna*/
    /* flex-direction: column; */

    /*Faz com que os blocos do container fiquem em formato de linha*/
    /* flex-direction: row; */
    /* flex-direction: row-reverse; */

    /* gap: 1rem;
    flex-wrap: wrap-reverse; */

    /* flex-flow: row wrap; */
    flex-flow: row-reverse wrap;
    align-content: space-evenly;

}

.box {
    min-width: 100px;
    /* min-height: 100px; */
    height: 100px;
    background-color: black;
    color: white;
    font-size: 2rem;
    padding: 0.5rem;

    display: flex;
    justify-content: center;
    align-items: center;

    /*Comentar os divs 3 à 6*/

    /*determina o quanto o item deve crescer em relação aos outros itens dentro do mesmo container*/
    /* flex-grow: 1; */

    /*é usada para definir o tamanho inicial dos itens flexíveis dentro de um contêiner flex.*/

    /* flex-shrink: 1;
    flex-basis: 250px; */

    /*grow shrink tamanho*/
    flex: 1 1 40%;
}

/*Classe SUDO pro segundo elemento ficar maior que o primeiro.*/
.box:nth-child(2) {
    flex: 2 2 40%;
    order: 0;
}